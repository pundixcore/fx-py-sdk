syntax = "proto3";
package fx.dex;

import "gogoproto/gogo.proto";

option go_package = "git.wokoworks.com/blockchain/fx-chain/x/dex/types";

//cumulative funding rates
message PairFundingRates {
  string pair_id = 1;
  string funding_rate = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  int64 funding_time = 3;
}

// system params
message Funding {
  int64 funding_period = 1;  // not used again after use funding time
  int64 next_funding_time = 2;
  int64 funding_times = 3;
  int64 next_log_time = 4;
  int64 log_funding_period = 5;
  int64 max_funding_per_block = 6;
}

message FundingTime {
  int64 summer_time = 1;
  int64 winter_time = 2;
  repeated string summer_clocks = 3;
  repeated string winter_clocks = 4;
  repeated string holidays = 5;
}

message SettleFunding {
  bool is_funding = 1;
  string next_position_id = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
}

// 溢价指数配置信息
message PremiumIndexConf {
  int64 update_period = 1;
  int64 next_update_time = 2;
  int64 round_start_time = 3;
  int64 next_round_time = 4;
  int32 round_index = 5;
}

// get/set -> key_prefix:pair_id:roundTimestamp
message PremiumIndex {
  string pair_id = 1;

  // 每回合（8小时）开始时间戳
  int64 round_timestamp = 2;

  // 每回合所包含的所有ticks
  repeated Tick ticks = 3;

  // 每分钟的tick
  message Tick {
    string value = 1 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.nullable) = false
    ];
    int64 ts = 2;
  }
}
